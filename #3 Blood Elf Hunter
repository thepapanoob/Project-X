<?xml version="1.0" encoding="utf-8"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="Pulse" NameClass="AutoUpdate" />
    <QuestsSorted Action="RunCode" NameClass="ProfileRestarter.StartProfileRestarter();" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;Current Profile: Learn the taming for your slave.&quot;)" />
    <QuestsSorted Action="If" NameClass="(!wManager.Wow.Helpers.SpellManager.KnowSpell(6991))" />
    <QuestsSorted Action="If" NameClass="(!(Quest.IsObjectiveComplete(1, 9484)))" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TamingtheBeas" />
    <QuestsSorted Action="RunLuaCode" NameClass="PetDismiss()" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="(!(Quest.IsObjectiveComplete(1, 9486)))" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TamingtheBeas2" />
    <QuestsSorted Action="RunLuaCode" NameClass="PetDismiss()" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="If" NameClass="(!(Quest.IsObjectiveComplete(1, 9485)))" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TamingtheBeas3" />
    <QuestsSorted Action="RunLuaCode" NameClass="PetDismiss()" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="PulseAllInOne" NameClass="BeastTraining" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;Current Profile: Now you can order your Slave.&quot;)" />
    <QuestsSorted Action="LoadProfile" NameClass="Project X\#1 Project X launcher.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="15399" Name="Lieutenant Dawnrunner" GameObject="false">
      <PickUpQuests>
        <int>9484</int>
        <int>9486</int>
        <int>9485</int>
        <int>9673</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>9484</int>
        <int>9486</int>
        <int>9485</int>
      </TurnInQuests>
      <Position X="8980.84" Y="-7458.36" Z="86.68897" />
    </NPCQuest>
    <NPCQuest Id="16675" Name="Halthenis" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>9673</int>
      </TurnInQuests>
      <Position X="9926.74" Y="-7396.38" Z="13.63649" />
    </NPCQuest>
  </NpcQuest>
  <Npc />
  <EasyQuests>
    <EasyQuest>
      <Name>Auto Update</Name>
      <QuestId />
      <QuestType>FullCSharpCode</QuestType>
      <QuestClass xsi:type="FullCSharpCodeEasyQuestClass">
        <Code>    public sealed class AutoUpdate : QuestClass
    {
        public AutoUpdate() // Don't forget to use good classe name
        {
            Name = "AutoUpdate";

            try
            {

                string onlineFile = "https://raw.githubusercontent.com/TheSmokie/Project-X/master/%233%20Blood%20Elf%20Hunter";
                Quester.Bot.QuesterSetting.Load();
                string profileName = "#3 Blood Elf Hunter.xml";

                string currentFile = System.Windows.Forms.Application.StartupPath + @"\Profiles\Quester\Project X\" + profileName;


                var currentFileContent = System.IO.File.ReadAllText(currentFile, System.Text.Encoding.UTF8);
                var onlineFileContent = new System.Net.WebClient { Encoding = System.Text.Encoding.UTF8 }.DownloadString(onlineFile);

                if (!string.IsNullOrWhiteSpace(currentFileContent) &amp;&amp; !string.IsNullOrWhiteSpace(onlineFileContent))
                {

                    if (currentFileContent != onlineFileContent) // if new update
                    {
                        robotManager.Helpful.Logging.Write("[Auto Updater] New version found, try to update.", (Logging.LogType)1, Color.Red);
                        System.IO.File.WriteAllText(currentFile, onlineFileContent,
                        System.Text.Encoding.UTF8); // replace user file by online file 
                        robotManager.Helpful.Logging.Write("[Auto Updater] New version Download Completed!", (Logging.LogType)1, Color.Red);
                        new System.Threading.Thread(() =&gt; robotManager.Products.Products.ProductRestart()).Start(); // reload product (profile)
                    }
                    if (currentFileContent == onlineFileContent)
                    {
                        robotManager.Helpful.Logging.Write("[Auto Updater]The version on your pc is the latest updated version.", (Logging.LogType)1, Color.Red);
                    }
                }
            }
            catch (System.Exception e)
            {
                robotManager.Helpful.Logging.WriteError("Auto update: " + e);
            }

            Lua.LuaDoString("DungeonFrameWorkLoaded = true");
        }
    }</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return Lua.LuaDoString&lt;bool&gt;("return DungeonFrameWorkLoaded");</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Taming the Beas</Name>
      <QuestId>
        <int>9484</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="8898.248" Y="-7547.233" Z="109.0901" />
          <Vector3 X="8898.248" Y="-7547.233" Z="109.0901" />
          <Vector3 X="8884.071" Y="-7589.695" Z="119.4673" />
          <Vector3 X="8852.831" Y="-7618.565" Z="121.2392" />
          <Vector3 X="8841.541" Y="-7649.901" Z="129.7844" />
          <Vector3 X="8870.376" Y="-7653.844" Z="132.7823" />
        </HotSpots>
        <EntryIdTarget>
          <int>15650</int>
        </EntryIdTarget>
        <ItemId>15917</ItemId>
        <Range>9.5</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return Quest.IsObjectiveComplete(1, 9484);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Taming the Beas2</Name>
      <QuestId>
        <int>9486</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="8914.866" Y="-7553.8" Z="109.287" />
          <Vector3 X="8923.768" Y="-7600.069" Z="120.2407" />
          <Vector3 X="8947.289" Y="-7596.244" Z="122.417" />
        </HotSpots>
        <EntryIdTarget>
          <int>15652</int>
        </EntryIdTarget>
        <ItemId>23702</ItemId>
        <Range>8.5</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return Quest.IsObjectiveComplete(1, 9486);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Taming the Beas3</Name>
      <QuestId>
        <int>9485</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="7958.399" Y="-6859.579" Z="59.13208" />
          <Vector3 X="7934.512" Y="-6878.76" Z="61.63224" />
          <Vector3 X="7833.356" Y="-6797.004" Z="55.58446" />
          <Vector3 X="7918.286" Y="-6964.682" Z="82.65562" />
        </HotSpots>
        <EntryIdTarget>
          <int>16353</int>
        </EntryIdTarget>
        <ItemId>23703</ItemId>
        <Range>9.5</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return Quest.IsObjectiveComplete(1, 9485);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Beast Training</Name>
      <QuestId>
        <int>9673</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>using System;
using robotManager.Helpful;
using wManager.Wow.Helpers;
using System.Drawing;
using System.Windows.Forms;
using System.Threading;
using wManager.Plugin;
 
   public class ProfileRestarter
    {
        private static bool _IsAfk = false;
        private static Vector3 afkPosition = (Vector3)null;
        private static int timer = 0;
        private static bool _isSubscribed = false;
        private static void WatchForEvents()
        {
            if (!_isSubscribed)
            {
                _isSubscribed = true;

                EventsLuaWithArgs.OnEventsLuaWithArgs += (LuaEventsId id, List&lt;string&gt; args) =&gt;
                {
                    if (id == wManager.Wow.Enums.LuaEventsId.CHAT_MSG_SYSTEM &amp;&amp; Conditions.ProductIsStartedNotInPause)
                    {

                        if (args.FirstOrDefault().Contains("You are now AFK"))
                        {
                            _IsAfk = true;
                            timer = 0;
                            afkPosition = ObjectManager.Me.Position;
                        }
                    }
                };
            }
        }

        public static void StartProfileRestarter()
        {

            Thread ProfileRestarterThread = new Thread(() =&gt;
            {
                Logging.Write("[Restarter]: Profile Restarter initialized");

                string profileName = "Project X\\Blood Elf Hunter.xml";
                string currentProfileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;


                while ((wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName) || !ObjectManager.Me.GetMove) &amp;&amp; Conditions.ProductIsStarted)
                {
                    Thread.Sleep(1000);
                }

                if (!_isSubscribed)
                {
                    Thread.Sleep(Usefuls.Latency + 500);
                    WatchForEvents();
                }

                while (Conditions.ProductIsStarted || Conditions.ProductInPause)
                {

                    if (wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                        break;

                    while (_IsAfk &amp;&amp; timer &lt; 600 &amp;&amp; !wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                    {
                        Thread.Sleep(1000);
                        timer++;
                    }

                    if (_IsAfk &amp;&amp; timer &gt;= 600 &amp;&amp; ObjectManager.Me.Position.DistanceTo(afkPosition) &lt; 25)
                    {
                        Logging.Write("[Restarter]: Bot seems to have stopped / went AFK for too long. Restart of profile in process...");
                        wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName = profileName;
                        robotManager.Products.Products.ProductRestart();
                        break;
                    }

                    timer = 0;
                    _IsAfk = false;
                    Thread.Sleep(10000);
                }

                Logging.Write("[Restarter]: Profile Restarter disposed");

            });

            ProfileRestarterThread.Start();
        }
    }</Script>
  <OffMeshConnections />
  <BlacklistNpc />
  <BlacklistNpcType />
  <Blackspots />
</EasyQuestProfile>
